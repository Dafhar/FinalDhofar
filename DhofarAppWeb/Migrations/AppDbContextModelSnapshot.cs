// <auto-generated />
using System;
using DhofarAppWeb.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DhofarAppWeb.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DhofarAppWeb.Model.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name_Ar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name_En")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name_Ar = "الفئة 1",
                            Name_En = "Category 1"
                        },
                        new
                        {
                            Id = 2,
                            Name_Ar = "الفئة 2",
                            Name_En = "Category 2"
                        });
                });

            modelBuilder.Entity("DhofarAppWeb.Model.Colors", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("HexColor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Colors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            HexColor = "#FF0000"
                        },
                        new
                        {
                            Id = 2,
                            HexColor = "#FFA500"
                        },
                        new
                        {
                            Id = 3,
                            HexColor = "#0000FF"
                        },
                        new
                        {
                            Id = 4,
                            HexColor = "#008000"
                        });
                });

            modelBuilder.Entity("DhofarAppWeb.Model.CommentReplies", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CommentSubjectId")
                        .HasColumnType("int");

                    b.Property<string>("File")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReplyComment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("CommentSubjectId");

                    b.HasIndex("UserId");

                    b.ToTable("CommentReplies");
                });

            modelBuilder.Entity("DhofarAppWeb.Model.CommentSubject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CommentTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("DownVoteCounter")
                        .HasColumnType("int");

                    b.Property<string>("File")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SubjectId")
                        .HasColumnType("int");

                    b.Property<int>("UpVoteCounter")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("SubjectId");

                    b.HasIndex("UserId");

                    b.ToTable("CommentSubjects");
                });

            modelBuilder.Entity("DhofarAppWeb.Model.Complaint", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int>("DepartmentTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAccepted")
                        .HasColumnType("bit");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("MySpecialist")
                        .HasColumnType("bit");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status_Ar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status_En")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Time")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("DepartmentTypeId");

                    b.HasIndex("UserId");

                    b.ToTable("Complaints");
                });

            modelBuilder.Entity("DhofarAppWeb.Model.ComplaintsFile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ComplaintId")
                        .HasColumnType("int");

                    b.Property<string>("FilePaths")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ComplaintId");

                    b.ToTable("ComplaintsFiles");
                });

            modelBuilder.Entity("DhofarAppWeb.Model.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("NameAr")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameEn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            NameAr = "أفغانستان",
                            NameEn = "Afghanistan"
                        },
                        new
                        {
                            Id = 2,
                            NameAr = "ألبانيا",
                            NameEn = "Albania"
                        },
                        new
                        {
                            Id = 3,
                            NameAr = "الجزائر",
                            NameEn = "Algeria"
                        },
                        new
                        {
                            Id = 4,
                            NameAr = "أندورا",
                            NameEn = "Andorra"
                        },
                        new
                        {
                            Id = 5,
                            NameAr = "أنغولا",
                            NameEn = "Angola"
                        },
                        new
                        {
                            Id = 6,
                            NameAr = "أنتيغوا وبربودا",
                            NameEn = "Antigua and Barbuda"
                        },
                        new
                        {
                            Id = 7,
                            NameAr = "الأرجنتين",
                            NameEn = "Argentina"
                        },
                        new
                        {
                            Id = 8,
                            NameAr = "أرمينيا",
                            NameEn = "Armenia"
                        },
                        new
                        {
                            Id = 9,
                            NameAr = "أستراليا",
                            NameEn = "Australia"
                        },
                        new
                        {
                            Id = 10,
                            NameAr = "النمسا",
                            NameEn = "Austria"
                        },
                        new
                        {
                            Id = 11,
                            NameAr = "أذربيجان",
                            NameEn = "Azerbaijan"
                        },
                        new
                        {
                            Id = 12,
                            NameAr = "الباهاما",
                            NameEn = "Bahamas"
                        },
                        new
                        {
                            Id = 13,
                            NameAr = "البحرين",
                            NameEn = "Bahrain"
                        },
                        new
                        {
                            Id = 14,
                            NameAr = "بنجلاديش",
                            NameEn = "Bangladesh"
                        },
                        new
                        {
                            Id = 15,
                            NameAr = "باربادوس",
                            NameEn = "Barbados"
                        },
                        new
                        {
                            Id = 16,
                            NameAr = "بيلاروس",
                            NameEn = "Belarus"
                        },
                        new
                        {
                            Id = 17,
                            NameAr = "بلجيكا",
                            NameEn = "Belgium"
                        },
                        new
                        {
                            Id = 18,
                            NameAr = "بليز",
                            NameEn = "Belize"
                        },
                        new
                        {
                            Id = 19,
                            NameAr = "بنين",
                            NameEn = "Benin"
                        },
                        new
                        {
                            Id = 20,
                            NameAr = "بوتان",
                            NameEn = "Bhutan"
                        },
                        new
                        {
                            Id = 21,
                            NameAr = "بوليفيا",
                            NameEn = "Bolivia"
                        },
                        new
                        {
                            Id = 22,
                            NameAr = "البوسنة والهرسك",
                            NameEn = "Bosnia and Herzegovina"
                        },
                        new
                        {
                            Id = 23,
                            NameAr = "بتسوانا",
                            NameEn = "Botswana"
                        },
                        new
                        {
                            Id = 24,
                            NameAr = "البرازيل",
                            NameEn = "Brazil"
                        },
                        new
                        {
                            Id = 25,
                            NameAr = "بروناي",
                            NameEn = "Brunei"
                        },
                        new
                        {
                            Id = 26,
                            NameAr = "بلغاريا",
                            NameEn = "Bulgaria"
                        },
                        new
                        {
                            Id = 27,
                            NameAr = "بوركينا فاسو",
                            NameEn = "Burkina Faso"
                        },
                        new
                        {
                            Id = 28,
                            NameAr = "بوروندي",
                            NameEn = "Burundi"
                        },
                        new
                        {
                            Id = 29,
                            NameAr = "الرأس الأخضر",
                            NameEn = "Cabo Verde"
                        },
                        new
                        {
                            Id = 30,
                            NameAr = "كمبوديا",
                            NameEn = "Cambodia"
                        },
                        new
                        {
                            Id = 31,
                            NameAr = "الكاميرون",
                            NameEn = "Cameroon"
                        },
                        new
                        {
                            Id = 32,
                            NameAr = "كندا",
                            NameEn = "Canada"
                        },
                        new
                        {
                            Id = 33,
                            NameAr = "جمهورية أفريقيا الوسطى",
                            NameEn = "Central African Republic"
                        },
                        new
                        {
                            Id = 34,
                            NameAr = "تشاد",
                            NameEn = "Chad"
                        },
                        new
                        {
                            Id = 35,
                            NameAr = "تشيلي",
                            NameEn = "Chile"
                        },
                        new
                        {
                            Id = 36,
                            NameAr = "الصين",
                            NameEn = "China"
                        },
                        new
                        {
                            Id = 37,
                            NameAr = "كولومبيا",
                            NameEn = "Colombia"
                        },
                        new
                        {
                            Id = 38,
                            NameAr = "جزر القمر",
                            NameEn = "Comoros"
                        },
                        new
                        {
                            Id = 39,
                            NameAr = "الكونغو (برازافيل)",
                            NameEn = "Congo (Congo-Brazzaville)"
                        },
                        new
                        {
                            Id = 40,
                            NameAr = "كوستاريكا",
                            NameEn = "Costa Rica"
                        },
                        new
                        {
                            Id = 41,
                            NameAr = "ساحل العاج",
                            NameEn = "Cote d'Ivoire"
                        },
                        new
                        {
                            Id = 42,
                            NameAr = "كرواتيا",
                            NameEn = "Croatia"
                        },
                        new
                        {
                            Id = 43,
                            NameAr = "كوبا",
                            NameEn = "Cuba"
                        },
                        new
                        {
                            Id = 44,
                            NameAr = "قبرص",
                            NameEn = "Cyprus"
                        },
                        new
                        {
                            Id = 45,
                            NameAr = "التشيك",
                            NameEn = "Czechia"
                        },
                        new
                        {
                            Id = 46,
                            NameAr = "الدنمارك",
                            NameEn = "Denmark"
                        },
                        new
                        {
                            Id = 47,
                            NameAr = "جيبوتي",
                            NameEn = "Djibouti"
                        },
                        new
                        {
                            Id = 48,
                            NameAr = "دومينيكا",
                            NameEn = "Dominica"
                        },
                        new
                        {
                            Id = 49,
                            NameAr = "جمهورية الدومينيكان",
                            NameEn = "Dominican Republic"
                        },
                        new
                        {
                            Id = 50,
                            NameAr = "الإكوادور",
                            NameEn = "Ecuador"
                        },
                        new
                        {
                            Id = 51,
                            NameAr = "مصر",
                            NameEn = "Egypt"
                        },
                        new
                        {
                            Id = 52,
                            NameAr = "السلفادور",
                            NameEn = "El Salvador"
                        },
                        new
                        {
                            Id = 53,
                            NameAr = "غينيا الاستوائية",
                            NameEn = "Equatorial Guinea"
                        },
                        new
                        {
                            Id = 54,
                            NameAr = "إريتريا",
                            NameEn = "Eritrea"
                        },
                        new
                        {
                            Id = 55,
                            NameAr = "إستونيا",
                            NameEn = "Estonia"
                        },
                        new
                        {
                            Id = 56,
                            NameAr = "إيسواتيني",
                            NameEn = "Eswatini"
                        },
                        new
                        {
                            Id = 57,
                            NameAr = "إثيوبيا",
                            NameEn = "Ethiopia"
                        },
                        new
                        {
                            Id = 58,
                            NameAr = "فيجي",
                            NameEn = "Fiji"
                        },
                        new
                        {
                            Id = 59,
                            NameAr = "فنلندا",
                            NameEn = "Finland"
                        },
                        new
                        {
                            Id = 60,
                            NameAr = "فرنسا",
                            NameEn = "France"
                        },
                        new
                        {
                            Id = 61,
                            NameAr = "الغابون",
                            NameEn = "Gabon"
                        },
                        new
                        {
                            Id = 62,
                            NameAr = "غامبيا",
                            NameEn = "Gambia"
                        },
                        new
                        {
                            Id = 63,
                            NameAr = "جورجيا",
                            NameEn = "Georgia"
                        },
                        new
                        {
                            Id = 64,
                            NameAr = "ألمانيا",
                            NameEn = "Germany"
                        },
                        new
                        {
                            Id = 65,
                            NameAr = "غانا",
                            NameEn = "Ghana"
                        },
                        new
                        {
                            Id = 66,
                            NameAr = "اليونان",
                            NameEn = "Greece"
                        },
                        new
                        {
                            Id = 67,
                            NameAr = "غرينادا",
                            NameEn = "Grenada"
                        },
                        new
                        {
                            Id = 68,
                            NameAr = "غواتيمالا",
                            NameEn = "Guatemala"
                        },
                        new
                        {
                            Id = 69,
                            NameAr = "غينيا",
                            NameEn = "Guinea"
                        },
                        new
                        {
                            Id = 70,
                            NameAr = "غينيا بيساو",
                            NameEn = "Guinea-Bissau"
                        },
                        new
                        {
                            Id = 71,
                            NameAr = "غيانا",
                            NameEn = "Guyana"
                        },
                        new
                        {
                            Id = 72,
                            NameAr = "هايتي",
                            NameEn = "Haiti"
                        },
                        new
                        {
                            Id = 73,
                            NameAr = "هندوراس",
                            NameEn = "Honduras"
                        },
                        new
                        {
                            Id = 74,
                            NameAr = "هنغاريا",
                            NameEn = "Hungary"
                        },
                        new
                        {
                            Id = 75,
                            NameAr = "أيسلندا",
                            NameEn = "Iceland"
                        },
                        new
                        {
                            Id = 76,
                            NameAr = "الهند",
                            NameEn = "India"
                        },
                        new
                        {
                            Id = 77,
                            NameAr = "إندونيسيا",
                            NameEn = "Indonesia"
                        },
                        new
                        {
                            Id = 78,
                            NameAr = "إيران",
                            NameEn = "Iran"
                        },
                        new
                        {
                            Id = 79,
                            NameAr = "العراق",
                            NameEn = "Iraq"
                        },
                        new
                        {
                            Id = 80,
                            NameAr = "أيرلندا",
                            NameEn = "Ireland"
                        },
                        new
                        {
                            Id = 81,
                            NameAr = "إيطاليا",
                            NameEn = "Italy"
                        },
                        new
                        {
                            Id = 82,
                            NameAr = "جامايكا",
                            NameEn = "Jamaica"
                        },
                        new
                        {
                            Id = 83,
                            NameAr = "اليابان",
                            NameEn = "Japan"
                        },
                        new
                        {
                            Id = 84,
                            NameAr = "الأردن",
                            NameEn = "Jordan"
                        },
                        new
                        {
                            Id = 85,
                            NameAr = "كازاخستان",
                            NameEn = "Kazakhstan"
                        },
                        new
                        {
                            Id = 86,
                            NameAr = "كينيا",
                            NameEn = "Kenya"
                        },
                        new
                        {
                            Id = 87,
                            NameAr = "كيريباتي",
                            NameEn = "Kiribati"
                        },
                        new
                        {
                            Id = 88,
                            NameAr = "كوريا الشمالية",
                            NameEn = "Korea, North"
                        },
                        new
                        {
                            Id = 89,
                            NameAr = "كوريا الجنوبية",
                            NameEn = "Korea, South"
                        },
                        new
                        {
                            Id = 90,
                            NameAr = "الكويت",
                            NameEn = "Kuwait"
                        },
                        new
                        {
                            Id = 91,
                            NameAr = "قيرغيزستان",
                            NameEn = "Kyrgyzstan"
                        },
                        new
                        {
                            Id = 92,
                            NameAr = "لاوس",
                            NameEn = "Laos"
                        },
                        new
                        {
                            Id = 93,
                            NameAr = "لاتفيا",
                            NameEn = "Latvia"
                        },
                        new
                        {
                            Id = 94,
                            NameAr = "لبنان",
                            NameEn = "Lebanon"
                        },
                        new
                        {
                            Id = 95,
                            NameAr = "ليسوتو",
                            NameEn = "Lesotho"
                        },
                        new
                        {
                            Id = 96,
                            NameAr = "ليبيريا",
                            NameEn = "Liberia"
                        },
                        new
                        {
                            Id = 97,
                            NameAr = "ليبيا",
                            NameEn = "Libya"
                        },
                        new
                        {
                            Id = 98,
                            NameAr = "ليختنشتاين",
                            NameEn = "Liechtenstein"
                        },
                        new
                        {
                            Id = 99,
                            NameAr = "ليتوانيا",
                            NameEn = "Lithuania"
                        },
                        new
                        {
                            Id = 100,
                            NameAr = "لوكسمبورغ",
                            NameEn = "Luxembourg"
                        },
                        new
                        {
                            Id = 101,
                            NameAr = "مدغشقر",
                            NameEn = "Madagascar"
                        },
                        new
                        {
                            Id = 102,
                            NameAr = "ملاوي",
                            NameEn = "Malawi"
                        },
                        new
                        {
                            Id = 103,
                            NameAr = "ماليزيا",
                            NameEn = "Malaysia"
                        },
                        new
                        {
                            Id = 104,
                            NameAr = "جزر المالديف",
                            NameEn = "Maldives"
                        },
                        new
                        {
                            Id = 105,
                            NameAr = "مالي",
                            NameEn = "Mali"
                        },
                        new
                        {
                            Id = 106,
                            NameAr = "مالطا",
                            NameEn = "Malta"
                        },
                        new
                        {
                            Id = 107,
                            NameAr = "جزر مارشال",
                            NameEn = "Marshall Islands"
                        },
                        new
                        {
                            Id = 108,
                            NameAr = "موريتانيا",
                            NameEn = "Mauritania"
                        },
                        new
                        {
                            Id = 109,
                            NameAr = "موريشيوس",
                            NameEn = "Mauritius"
                        },
                        new
                        {
                            Id = 110,
                            NameAr = "المكسيك",
                            NameEn = "Mexico"
                        },
                        new
                        {
                            Id = 111,
                            NameAr = "ميكرونيزيا",
                            NameEn = "Micronesia"
                        },
                        new
                        {
                            Id = 112,
                            NameAr = "مولدوفا",
                            NameEn = "Moldova"
                        },
                        new
                        {
                            Id = 113,
                            NameAr = "موناكو",
                            NameEn = "Monaco"
                        },
                        new
                        {
                            Id = 114,
                            NameAr = "منغوليا",
                            NameEn = "Mongolia"
                        },
                        new
                        {
                            Id = 115,
                            NameAr = "الجبل الأسود",
                            NameEn = "Montenegro"
                        },
                        new
                        {
                            Id = 116,
                            NameAr = "المغرب",
                            NameEn = "Morocco"
                        },
                        new
                        {
                            Id = 117,
                            NameAr = "موزمبيق",
                            NameEn = "Mozambique"
                        },
                        new
                        {
                            Id = 118,
                            NameAr = "ميانمار (بورما)",
                            NameEn = "Myanmar (formerly Burma)"
                        },
                        new
                        {
                            Id = 119,
                            NameAr = "ناميبيا",
                            NameEn = "Namibia"
                        },
                        new
                        {
                            Id = 120,
                            NameAr = "ناورو",
                            NameEn = "Nauru"
                        },
                        new
                        {
                            Id = 121,
                            NameAr = "نيبال",
                            NameEn = "Nepal"
                        },
                        new
                        {
                            Id = 122,
                            NameAr = "هولندا",
                            NameEn = "Netherlands"
                        },
                        new
                        {
                            Id = 123,
                            NameAr = "نيوزيلندا",
                            NameEn = "New Zealand"
                        },
                        new
                        {
                            Id = 124,
                            NameAr = "نيكاراغوا",
                            NameEn = "Nicaragua"
                        },
                        new
                        {
                            Id = 125,
                            NameAr = "النيجر",
                            NameEn = "Niger"
                        },
                        new
                        {
                            Id = 126,
                            NameAr = "نيجيريا",
                            NameEn = "Nigeria"
                        },
                        new
                        {
                            Id = 127,
                            NameAr = "مقدونيا الشمالية",
                            NameEn = "North Macedonia"
                        },
                        new
                        {
                            Id = 128,
                            NameAr = "النرويج",
                            NameEn = "Norway"
                        },
                        new
                        {
                            Id = 129,
                            NameAr = "عُمان",
                            NameEn = "Oman"
                        },
                        new
                        {
                            Id = 130,
                            NameAr = "باكستان",
                            NameEn = "Pakistan"
                        },
                        new
                        {
                            Id = 131,
                            NameAr = "بالاو",
                            NameEn = "Palau"
                        },
                        new
                        {
                            Id = 132,
                            NameAr = "بنما",
                            NameEn = "Panama"
                        },
                        new
                        {
                            Id = 133,
                            NameAr = "بابوا غينيا الجديدة",
                            NameEn = "Papua New Guinea"
                        },
                        new
                        {
                            Id = 134,
                            NameAr = "باراغواي",
                            NameEn = "Paraguay"
                        },
                        new
                        {
                            Id = 135,
                            NameAr = "بيرو",
                            NameEn = "Peru"
                        },
                        new
                        {
                            Id = 136,
                            NameAr = "الفلبين",
                            NameEn = "Philippines"
                        },
                        new
                        {
                            Id = 137,
                            NameAr = "بولندا",
                            NameEn = "Poland"
                        },
                        new
                        {
                            Id = 138,
                            NameAr = "البرتغال",
                            NameEn = "Portugal"
                        },
                        new
                        {
                            Id = 139,
                            NameAr = "قطر",
                            NameEn = "Qatar"
                        },
                        new
                        {
                            Id = 140,
                            NameAr = "رومانيا",
                            NameEn = "Romania"
                        },
                        new
                        {
                            Id = 141,
                            NameAr = "روسيا",
                            NameEn = "Russia"
                        },
                        new
                        {
                            Id = 142,
                            NameAr = "رواندا",
                            NameEn = "Rwanda"
                        },
                        new
                        {
                            Id = 143,
                            NameAr = "سانت كيتس ونيفيس",
                            NameEn = "Saint Kitts and Nevis"
                        },
                        new
                        {
                            Id = 144,
                            NameAr = "سانت لوسيا",
                            NameEn = "Saint Lucia"
                        },
                        new
                        {
                            Id = 145,
                            NameAr = "سانت فينسنت والغرينادين",
                            NameEn = "Saint Vincent and the Grenadines"
                        },
                        new
                        {
                            Id = 146,
                            NameAr = "ساموا",
                            NameEn = "Samoa"
                        },
                        new
                        {
                            Id = 147,
                            NameAr = "سان مارينو",
                            NameEn = "San Marino"
                        },
                        new
                        {
                            Id = 148,
                            NameAr = "ساو تومي وبرينسيبي",
                            NameEn = "Sao Tome and Principe"
                        },
                        new
                        {
                            Id = 149,
                            NameAr = "المملكة العربية السعودية",
                            NameEn = "Saudi Arabia"
                        },
                        new
                        {
                            Id = 150,
                            NameAr = "السنغال",
                            NameEn = "Senegal"
                        },
                        new
                        {
                            Id = 151,
                            NameAr = "صربيا",
                            NameEn = "Serbia"
                        },
                        new
                        {
                            Id = 152,
                            NameAr = "سيشل",
                            NameEn = "Seychelles"
                        },
                        new
                        {
                            Id = 153,
                            NameAr = "سيراليون",
                            NameEn = "Sierra Leone"
                        },
                        new
                        {
                            Id = 154,
                            NameAr = "سنغافورة",
                            NameEn = "Singapore"
                        },
                        new
                        {
                            Id = 155,
                            NameAr = "سلوفاكيا",
                            NameEn = "Slovakia"
                        },
                        new
                        {
                            Id = 156,
                            NameAr = "سلوفينيا",
                            NameEn = "Slovenia"
                        },
                        new
                        {
                            Id = 157,
                            NameAr = "جزر سليمان",
                            NameEn = "Solomon Islands"
                        },
                        new
                        {
                            Id = 158,
                            NameAr = "الصومال",
                            NameEn = "Somalia"
                        },
                        new
                        {
                            Id = 159,
                            NameAr = "جنوب أفريقيا",
                            NameEn = "South Africa"
                        },
                        new
                        {
                            Id = 160,
                            NameAr = "جنوب السودان",
                            NameEn = "South Sudan"
                        },
                        new
                        {
                            Id = 161,
                            NameAr = "إسبانيا",
                            NameEn = "Spain"
                        },
                        new
                        {
                            Id = 162,
                            NameAr = "سريلانكا",
                            NameEn = "Sri Lanka"
                        },
                        new
                        {
                            Id = 163,
                            NameAr = "السودان",
                            NameEn = "Sudan"
                        },
                        new
                        {
                            Id = 164,
                            NameAr = "سورينام",
                            NameEn = "Suriname"
                        },
                        new
                        {
                            Id = 165,
                            NameAr = "السويد",
                            NameEn = "Sweden"
                        },
                        new
                        {
                            Id = 166,
                            NameAr = "سويسرا",
                            NameEn = "Switzerland"
                        },
                        new
                        {
                            Id = 167,
                            NameAr = "سوريا",
                            NameEn = "Syria"
                        },
                        new
                        {
                            Id = 168,
                            NameAr = "تايوان",
                            NameEn = "Taiwan"
                        },
                        new
                        {
                            Id = 169,
                            NameAr = "طاجيكستان",
                            NameEn = "Tajikistan"
                        },
                        new
                        {
                            Id = 170,
                            NameAr = "تنزانيا",
                            NameEn = "Tanzania"
                        },
                        new
                        {
                            Id = 171,
                            NameAr = "تايلاند",
                            NameEn = "Thailand"
                        },
                        new
                        {
                            Id = 172,
                            NameAr = "تيمور الشرقية",
                            NameEn = "Timor-Leste"
                        },
                        new
                        {
                            Id = 173,
                            NameAr = "توغو",
                            NameEn = "Togo"
                        },
                        new
                        {
                            Id = 174,
                            NameAr = "تونغا",
                            NameEn = "Tonga"
                        },
                        new
                        {
                            Id = 175,
                            NameAr = "ترينيداد وتوباغو",
                            NameEn = "Trinidad and Tobago"
                        },
                        new
                        {
                            Id = 176,
                            NameAr = "تونس",
                            NameEn = "Tunisia"
                        },
                        new
                        {
                            Id = 177,
                            NameAr = "تركيا",
                            NameEn = "Turkey"
                        },
                        new
                        {
                            Id = 178,
                            NameAr = "تركمانستان",
                            NameEn = "Turkmenistan"
                        },
                        new
                        {
                            Id = 179,
                            NameAr = "توفالو",
                            NameEn = "Tuvalu"
                        },
                        new
                        {
                            Id = 180,
                            NameAr = "أوغندا",
                            NameEn = "Uganda"
                        },
                        new
                        {
                            Id = 181,
                            NameAr = "أوكرانيا",
                            NameEn = "Ukraine"
                        },
                        new
                        {
                            Id = 182,
                            NameAr = "الإمارات العربية المتحدة",
                            NameEn = "United Arab Emirates"
                        },
                        new
                        {
                            Id = 183,
                            NameAr = "المملكة المتحدة",
                            NameEn = "United Kingdom"
                        },
                        new
                        {
                            Id = 184,
                            NameAr = "الولايات المتحدة الأمريكية",
                            NameEn = "United States of America"
                        },
                        new
                        {
                            Id = 185,
                            NameAr = "أوروغواي",
                            NameEn = "Uruguay"
                        },
                        new
                        {
                            Id = 186,
                            NameAr = "أوزبكستان",
                            NameEn = "Uzbekistan"
                        },
                        new
                        {
                            Id = 187,
                            NameAr = "فانواتو",
                            NameEn = "Vanuatu"
                        },
                        new
                        {
                            Id = 188,
                            NameAr = "الفاتيكان",
                            NameEn = "Vatican City"
                        },
                        new
                        {
                            Id = 189,
                            NameAr = "فنزويلا",
                            NameEn = "Venezuela"
                        },
                        new
                        {
                            Id = 190,
                            NameAr = "فيتنام",
                            NameEn = "Vietnam"
                        },
                        new
                        {
                            Id = 191,
                            NameAr = "اليمن",
                            NameEn = "Yemen"
                        },
                        new
                        {
                            Id = 192,
                            NameAr = "زامبيا",
                            NameEn = "Zambia"
                        },
                        new
                        {
                            Id = 193,
                            NameAr = "زيمبابوي",
                            NameEn = "Zimbabwe"
                        });
                });

            modelBuilder.Entity("DhofarAppWeb.Model.DepartmentAdmin", b =>
                {
                    b.Property<int>("DepartmentTypeId")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("DepartmentTypeId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("DepartmentAdmins");
                });

            modelBuilder.Entity("DhofarAppWeb.Model.DepartmentType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name_Ar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name_En")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DepartmentTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name_Ar = "نوع القسم 1",
                            Name_En = "DepartmentType 1"
                        },
                        new
                        {
                            Id = 2,
                            Name_Ar = "نوع القسم 2",
                            Name_En = "DepartmentType 2"
                        });
                });

            modelBuilder.Entity("DhofarAppWeb.Model.DeviceToken", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("deviceTokens");
                });

            modelBuilder.Entity("DhofarAppWeb.Model.FavoriteSubject", b =>
                {
                    b.Property<string>("UserId")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("SubjectId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "SubjectId");

                    b.HasIndex("SubjectId");

                    b.ToTable("FavoriteSubjects");
                });

            modelBuilder.Entity("DhofarAppWeb.Model.GeneralSubjectsType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name_Ar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name_En")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("GeneralSubjectsTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name_Ar = "الأفكار والمقترحات العامة",
                            Name_En = "General ideas and suggestions",
                            Title = "عام"
                        },
                        new
                        {
                            Id = 2,
                            Name_Ar = "تطوير الخدمات الالكترونية",
                            Name_En = "Development of electronic services",
                            Title = "عام"
                        },
                        new
                        {
                            Id = 3,
                            Name_Ar = "حلول وأفكار تصريف مياه الأمطار",
                            Name_En = "Solutions and ideas for rainwater drainage",
                            Title = "عام"
                        },
                        new
                        {
                            Id = 4,
                            Name_Ar = "تطوير السوق المركزي",
                            Name_En = "Development of the central market",
                            Title = "عام"
                        },
                        new
                        {
                            Id = 5,
                            Name_Ar = "مقترح لفعاليات خريف ظفار ٢٠٢٤",
                            Name_En = "Proposal for Dhofar Fall 2024 events",
                            Title = "خاص"
                        });
                });

            modelBuilder.Entity("DhofarAppWeb.Model.IdentityNumber", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("IdentityNumbers");
                });

            modelBuilder.Entity("DhofarAppWeb.Model.OnBoardScreen", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("OnBoardScreens");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "يتيح تطبيق ضع بصمتك التابع لبلدية ظفار وسيلة فعّالة لمشاركة الأفكار بين المواطنين والسلطات المحلية بسهولة. مما يسهم في خلق بيئة تشجع ",
                            ImageUrl = ".uploads/b8f808a9-5cb4-43c9-a294-3d8abfefa36f_onboard_1 (1).png",
                            Title = "شاركنا أفكارك"
                        },
                        new
                        {
                            Id = 2,
                            Description = "قم بالإبلاغ عن المشكلات وحلها بكفاءة من خلال تقديم طلب في التطبيق واستمتع بتجربة سلسة في التعبير عن مخاوفك. ويمكنك تتبع طلبك بسهولة عن بعد.",
                            ImageUrl = "uploads/a3cfa779-1119-47f3-b801-5084b664a3e2_onboard_2.png",
                            Title = "قدم شكوى أو بلاغ"
                        });
                });

            modelBuilder.Entity("DhofarAppWeb.Model.Poll", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Question")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SubjectId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SubjectId")
                        .IsUnique();

                    b.ToTable("Polls");
                });

            modelBuilder.Entity("DhofarAppWeb.Model.PollOption", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("OptionText")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PollId")
                        .HasColumnType("int");

                    b.Property<int>("VoteCount")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PollId");

                    b.ToTable("PollOptions");
                });

            modelBuilder.Entity("DhofarAppWeb.Model.RatingSubject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsDisLike")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLike")
                        .HasColumnType("bit");

                    b.Property<int>("SubjectId")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("SubjectId");

                    b.HasIndex("UserId");

                    b.ToTable("RatingSubjects");
                });

            modelBuilder.Entity("DhofarAppWeb.Model.SubCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Name_Ar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name_En")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("SubCategories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            Name_Ar = "الفئة الفرعية 1",
                            Name_En = "Subcategory 1"
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 2,
                            Name_Ar = "الفئة الفرعية 2",
                            Name_En = "Subcategory 2"
                        });
                });

            modelBuilder.Entity("DhofarAppWeb.Model.Subject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DisLikeCounter")
                        .HasColumnType("int");

                    b.Property<int>("GeneralSubjectsTypesId")
                        .HasColumnType("int");

                    b.Property<int>("LikeCounter")
                        .HasColumnType("int");

                    b.Property<string>("PrimarySubject")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("VisitorCounter")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GeneralSubjectsTypesId");

                    b.HasIndex("UserId");

                    b.ToTable("Subjects");
                });

            modelBuilder.Entity("DhofarAppWeb.Model.SubjectFiles", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FilePaths")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SubjectId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SubjectId");

                    b.ToTable("SubjectFiles");
                });

            modelBuilder.Entity("DhofarAppWeb.Model.SubjectType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name_Ar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name_En")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SubjectTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name_Ar = "نقطة نقاش",
                            Name_En = "suggest"
                        },
                        new
                        {
                            Id = 2,
                            Name_Ar = "افكار مبتكرة",
                            Name_En = "Ideas"
                        });
                });

            modelBuilder.Entity("DhofarAppWeb.Model.SubjectTypeSubject", b =>
                {
                    b.Property<int>("SubjectId")
                        .HasColumnType("int");

                    b.Property<int>("SubjectTypeId")
                        .HasColumnType("int");

                    b.HasKey("SubjectId", "SubjectTypeId");

                    b.HasIndex("SubjectTypeId");

                    b.ToTable("SubjectTypeSubjects");
                });

            modelBuilder.Entity("DhofarAppWeb.Model.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("CodeNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdentityNumber")
                        .HasColumnType("int");

                    b.Property<string>("ImageURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("JoinedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Likes")
                        .HasColumnType("int");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTime>("LogInDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("MyColor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SelectedLanguage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Sound")
                        .HasColumnType("bit");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("DhofarAppWeb.Model.UserColors", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("ColorsId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "ColorsId");

                    b.HasIndex("ColorsId");

                    b.ToTable("UserColors");
                });

            modelBuilder.Entity("DhofarAppWeb.Model.UserCommentVote", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CommentSubjectId")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("VoteDown")
                        .HasColumnType("bit");

                    b.Property<bool>("VoteUp")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("CommentSubjectId");

                    b.HasIndex("UserId");

                    b.ToTable("UserCommentVotes");
                });

            modelBuilder.Entity("DhofarAppWeb.Model.UserVote", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("PollId")
                        .HasColumnType("int");

                    b.Property<int>("PollOptionId")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("PollId");

                    b.HasIndex("PollOptionId");

                    b.HasIndex("UserId");

                    b.ToTable("UserVotes");
                });

            modelBuilder.Entity("DhofarAppWeb.Model.Visitor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("JoinedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Visitors");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "super admin",
                            ConcurrencyStamp = "00000000-0000-0000-0000-000000000000",
                            Name = "Super Admin",
                            NormalizedName = "SUPER ADMIN"
                        },
                        new
                        {
                            Id = "admin",
                            ConcurrencyStamp = "00000000-0000-0000-0000-000000000000",
                            Name = "Admin",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = "user",
                            ConcurrencyStamp = "00000000-0000-0000-0000-000000000000",
                            Name = "User",
                            NormalizedName = "USER"
                        },
                        new
                        {
                            Id = "suspict",
                            ConcurrencyStamp = "00000000-0000-0000-0000-000000000000",
                            Name = "Suspict",
                            NormalizedName = "SUSPICT"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("DhofarAppWeb.Model.CommentReplies", b =>
                {
                    b.HasOne("DhofarAppWeb.Model.CommentSubject", "CommentSubject")
                        .WithMany("CommentReplies")
                        .HasForeignKey("CommentSubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DhofarAppWeb.Model.User", "User")
                        .WithMany("CommentReplies")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CommentSubject");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DhofarAppWeb.Model.CommentSubject", b =>
                {
                    b.HasOne("DhofarAppWeb.Model.Subject", "Subject")
                        .WithMany("CommentSubjects")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DhofarAppWeb.Model.User", "User")
                        .WithMany("CommentSubjects")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Subject");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DhofarAppWeb.Model.Complaint", b =>
                {
                    b.HasOne("DhofarAppWeb.Model.Category", "Category")
                        .WithMany("Complaints")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DhofarAppWeb.Model.DepartmentType", "DepartmentType")
                        .WithMany("Complaints")
                        .HasForeignKey("DepartmentTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DhofarAppWeb.Model.User", "User")
                        .WithMany("Complaints")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("DepartmentType");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DhofarAppWeb.Model.ComplaintsFile", b =>
                {
                    b.HasOne("DhofarAppWeb.Model.Complaint", "complaint")
                        .WithMany("Files")
                        .HasForeignKey("ComplaintId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("complaint");
                });

            modelBuilder.Entity("DhofarAppWeb.Model.DepartmentAdmin", b =>
                {
                    b.HasOne("DhofarAppWeb.Model.DepartmentType", "DepartmentType")
                        .WithMany("DepartmentAdmins")
                        .HasForeignKey("DepartmentTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DhofarAppWeb.Model.User", "User")
                        .WithMany("DepartmentAdmins")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DepartmentType");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DhofarAppWeb.Model.DeviceToken", b =>
                {
                    b.HasOne("DhofarAppWeb.Model.User", "User")
                        .WithMany("DeviceTokens")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("DhofarAppWeb.Model.FavoriteSubject", b =>
                {
                    b.HasOne("DhofarAppWeb.Model.Subject", "Subject")
                        .WithMany("FavoriteSubjects")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DhofarAppWeb.Model.User", "User")
                        .WithMany("FavoriteSubjects")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Subject");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DhofarAppWeb.Model.Poll", b =>
                {
                    b.HasOne("DhofarAppWeb.Model.Subject", "Subject")
                        .WithOne("Poll")
                        .HasForeignKey("DhofarAppWeb.Model.Poll", "SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("DhofarAppWeb.Model.PollOption", b =>
                {
                    b.HasOne("DhofarAppWeb.Model.Poll", "Poll")
                        .WithMany("Options")
                        .HasForeignKey("PollId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Poll");
                });

            modelBuilder.Entity("DhofarAppWeb.Model.RatingSubject", b =>
                {
                    b.HasOne("DhofarAppWeb.Model.Subject", "Subject")
                        .WithMany("RatingSubjects")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DhofarAppWeb.Model.User", "User")
                        .WithMany("RatingSubjects")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Subject");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DhofarAppWeb.Model.SubCategory", b =>
                {
                    b.HasOne("DhofarAppWeb.Model.Category", "category")
                        .WithMany("subcategories")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("category");
                });

            modelBuilder.Entity("DhofarAppWeb.Model.Subject", b =>
                {
                    b.HasOne("DhofarAppWeb.Model.GeneralSubjectsType", "GeneralSubjectsTypes")
                        .WithMany("Subjects")
                        .HasForeignKey("GeneralSubjectsTypesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DhofarAppWeb.Model.User", "User")
                        .WithMany("Subjects")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GeneralSubjectsTypes");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DhofarAppWeb.Model.SubjectFiles", b =>
                {
                    b.HasOne("DhofarAppWeb.Model.Subject", "Subject")
                        .WithMany("Files")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("DhofarAppWeb.Model.SubjectTypeSubject", b =>
                {
                    b.HasOne("DhofarAppWeb.Model.Subject", "Subject")
                        .WithMany("SubjectTypeSubjects")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DhofarAppWeb.Model.SubjectType", "SubjectType")
                        .WithMany("SubjectTypeSubjects")
                        .HasForeignKey("SubjectTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Subject");

                    b.Navigation("SubjectType");
                });

            modelBuilder.Entity("DhofarAppWeb.Model.UserColors", b =>
                {
                    b.HasOne("DhofarAppWeb.Model.Colors", "Colors")
                        .WithMany()
                        .HasForeignKey("ColorsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DhofarAppWeb.Model.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Colors");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DhofarAppWeb.Model.UserCommentVote", b =>
                {
                    b.HasOne("DhofarAppWeb.Model.CommentSubject", "CommentSubject")
                        .WithMany("UserCommentVotes")
                        .HasForeignKey("CommentSubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DhofarAppWeb.Model.User", "User")
                        .WithMany("userCommentVotes")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CommentSubject");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DhofarAppWeb.Model.UserVote", b =>
                {
                    b.HasOne("DhofarAppWeb.Model.Poll", "Poll")
                        .WithMany("UserVotes")
                        .HasForeignKey("PollId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DhofarAppWeb.Model.PollOption", "PollOption")
                        .WithMany("UserVotes")
                        .HasForeignKey("PollOptionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DhofarAppWeb.Model.User", "User")
                        .WithMany("UserVotes")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Poll");

                    b.Navigation("PollOption");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("DhofarAppWeb.Model.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("DhofarAppWeb.Model.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DhofarAppWeb.Model.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("DhofarAppWeb.Model.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DhofarAppWeb.Model.Category", b =>
                {
                    b.Navigation("Complaints");

                    b.Navigation("subcategories");
                });

            modelBuilder.Entity("DhofarAppWeb.Model.CommentSubject", b =>
                {
                    b.Navigation("CommentReplies");

                    b.Navigation("UserCommentVotes");
                });

            modelBuilder.Entity("DhofarAppWeb.Model.Complaint", b =>
                {
                    b.Navigation("Files");
                });

            modelBuilder.Entity("DhofarAppWeb.Model.DepartmentType", b =>
                {
                    b.Navigation("Complaints");

                    b.Navigation("DepartmentAdmins");
                });

            modelBuilder.Entity("DhofarAppWeb.Model.GeneralSubjectsType", b =>
                {
                    b.Navigation("Subjects");
                });

            modelBuilder.Entity("DhofarAppWeb.Model.Poll", b =>
                {
                    b.Navigation("Options");

                    b.Navigation("UserVotes");
                });

            modelBuilder.Entity("DhofarAppWeb.Model.PollOption", b =>
                {
                    b.Navigation("UserVotes");
                });

            modelBuilder.Entity("DhofarAppWeb.Model.Subject", b =>
                {
                    b.Navigation("CommentSubjects");

                    b.Navigation("FavoriteSubjects");

                    b.Navigation("Files");

                    b.Navigation("Poll");

                    b.Navigation("RatingSubjects");

                    b.Navigation("SubjectTypeSubjects");
                });

            modelBuilder.Entity("DhofarAppWeb.Model.SubjectType", b =>
                {
                    b.Navigation("SubjectTypeSubjects");
                });

            modelBuilder.Entity("DhofarAppWeb.Model.User", b =>
                {
                    b.Navigation("CommentReplies");

                    b.Navigation("CommentSubjects");

                    b.Navigation("Complaints");

                    b.Navigation("DepartmentAdmins");

                    b.Navigation("DeviceTokens");

                    b.Navigation("FavoriteSubjects");

                    b.Navigation("RatingSubjects");

                    b.Navigation("Subjects");

                    b.Navigation("UserVotes");

                    b.Navigation("userCommentVotes");
                });
#pragma warning restore 612, 618
        }
    }
}
